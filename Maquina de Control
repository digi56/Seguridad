#include <stdio.h>

#include "platform.h"
#include "xparameters.h" // add
#include "xiomodule.h" // add
XIOModule gpi;
XIOModule gpo;
#define ESTADO_NORMAL 1
#define ESTADO_VIAJERO 2
#define ESTADO_MAESTRO 3
#define CLAVE_NORMAL 0x31323334 //1234
#define CLAVE_VIAJERO 0x31323335 //1235
#define CLAVE_MAESTRO 0x31323336 //1236
#define SEGALT 0x04

char estadoCasa = ESTADO_NORMAL;
char intentosIngreso = 0;
char asterisco = 0;

void print(char *str);
//---manejo de buses---
//---bus manager functions---
void write_bus(u32 data)
{
	XIOModule_DiscreteWrite(&gpo, 2, data);
}
u32 read_bus()
{
	return XIOModule_DiscreteRead(&gpi, 1); // read data_bus
}
u32 isDone(u32 peripheral_number)
{
	u32 isDone;
	//isDone = (boolean) sw = XIOModule_DiscreteRead(&gpi, 2); // read isDone pin

	if(XIOModule_DiscreteRead(&gpi, 2) == peripheral_number){
		isDone = TRUE;
	}else {
		isDone = FALSE;
	}
	return isDone;
}
void enable (u32 addr, u32 en)
{
	XIOModule_DiscreteWrite(&gpo, 1, addr); // send addr
	XIOModule_DiscreteWrite(&gpo, 4, en); // send enable
}
void cmd (u32 command)
{
	XIOModule_DiscreteWrite(&gpo, 3, command);
}



/// Si tocar!
void delay_ms(u32 delay){
	write_bus(delay);
	enable(0x16,1);
	while(!isDone(1));
	enable(0,0);
}
void delay_us(u32 delay){
	write_bus(delay);
	enable(0x18,4);
	while(!isDone(4));
	enable(0,0);
}

void lcd_newLine(){
	cmd(3);
	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
}

void lcd_sendByte(char data){
	write_bus(data);
	cmd(2);
	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
}

void lcd_sendStr(char* data){
	int index = 0;
	for (index = 0; index < 32; index++) {
			if (data[index] == 0) break;
			lcd_sendByte(data[index]);
		}
}

void show_leds(u32 data)
{
	enable(0x19,8);
	//XIOModule_DiscreteWrite(&gpo, 2, data);
	write_bus(data);
	while(!isDone(8));
}

void lcd_clear(){
	cmd(6);
	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
}

void lcd_init(){
	cmd(1);
	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
	delay_ms(500);
}

//void lcd_desp(){
//	cmd(5);
//	enable(0x17,2);
//	while(!isDone(2));
//	enable(0,0);
//}

void lcd_home(){
	cmd(4);
	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
}

//void lcd_xPos(u8 x){
//	int index = 0;
//	for (index = 0; index < x-1; index++) {
//		lcd_desp();
//	}
//}


void alterna_estado(){
	switch (estadoCasa) {
		case ESTADO_NORMAL:
			if(alterna_comprobarClave(CLAVE_NORMAL)){
				//Abrir la puerta
				cerradura();
				alterna_mensaje("Bienvenido");
				intentosIngreso = 0;
			} else if(alterna_comprobarClave(CLAVE_VIAJERO)){
				estadoCasa = ESTADO_VIAJERO;
				//Activar modo viajero
				alterna_mensaje("Modo Viajero Activado");
			} else {
				(intentosIngreso==3) ? estadoCasa=ESTADO_MAESTRO : intentosIngreso++;
				alterna_mensaje("Clave incorrecta");
			}
			break;
		case ESTADO_VIAJERO:
			if(alterna_comprobarClave(CLAVE_VIAJERO)){
				estadoCasa = ESTADO_NORMAL;
				intentosIngreso = 0;
				//Desactivar modo viajero
				//Abrir la puerta
				cerradura();
				alterna_mensaje("Bienvenido");
			} else {
				(intentosIngreso==3) ? estadoCasa=ESTADO_MAESTRO : intentosIngreso++;
				alterna_mensaje("Clave incorrecta");
			}
			break;
		case ESTADO_MAESTRO:
			if(alterna_comprobarClave(CLAVE_MAESTRO)){
				estadoCasa = ESTADO_NORMAL;
				intentosIngreso = 0;
				alterna_mensaje("Modo Normal Activado");
			}
			break;
		default:
			break;
	}
}

void alterna_limpiar(){
	lcd_clear();
	lcd_sendStr("Ingrese la contraseÃ±a: ");
	lcd_newLine();
	asterisco=0;
}

void alterna_caracter(){
	if (asterisco < 4) {
		lcd_sendStr("*");
		asterisco++;
	}
}

void alterna_mensaje(char* data){
	lcd_clear();
	lcd_sendStr(data);
	delay_ms(3000);
	alterna_limpiar();
}

int alterna_comprobarClave(u32 clave){
	cmd(1);
	write_bus((clave>>16));
	enable(SEGALT,2);
	while(!isDone(2));
	cmd(2);
	write_bus((clave & 0xFFFF));
	while(!isDone(2));
	cmd(3);
	while(!isDone(2));
	enable(0,0);
	return read_bus();
}

void alterna_comprobarAlerta(u32 clave){
	switch (read_bus()) {
		case 1:
			alterna_caracter();
			break;
		case 2:
			alterna_limpiar();
			break;
		case 4:
			alterna_estado();
			break;
		default:
			break;
	}
}

void cerradura(){

	enable(0x17,2);
	while(!isDone(2));
	enable(0,0);
}


int main()
{

init_platform();

u32 data;

	data = XIOModule_Initialize(&gpi, XPAR_IOMODULE_0_DEVICE_ID);
	data = XIOModule_Start(&gpi);
	data = XIOModule_Initialize(&gpo, XPAR_IOMODULE_0_DEVICE_ID);
	data = XIOModule_Start(&gpo);
	lcd_init();
while (1){
	cmd(4);
	enable(SEGALT,2);
	while(!isDone(2));
	enable(0,0);
	//alterna_comprobarAlerta(read_bus());

}
	cleanup_platform();
return 0;
}
